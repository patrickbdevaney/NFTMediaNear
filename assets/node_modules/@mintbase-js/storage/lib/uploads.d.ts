/// <reference types="node" />
export declare type ArweaveResponse = {
    id: string;
    block: string;
    name: string;
    mimeType: string;
};
declare type ReferenceObject = {
    title?: string;
    description?: string;
    media?: File | string;
    media_type?: string;
    animation_url?: File | string;
    document?: File | string;
    attributes?: Trait[];
    category?: string;
    tags?: string[];
    extra?: Trait[];
};
declare type Trait = {
    display_type: string;
    trait_type: string;
    value: number;
};
/**
 * (NodeJS) upload a file via POST to upload service
 * @param file A file to upload
 * @param name The name of the file to upload
 */
export declare const uploadBuffer: (file: Buffer, name: string) => Promise<ArweaveResponse>;
/**
 * (Browser) upload a file via POST to upload service
 * @param file A file to upload
 */
export declare const uploadFile: (file: File) => Promise<ArweaveResponse>;
/**
 * (Browser) upload a json reference object via POST to upload service
 * @param ReferenceObject A json reference object to upload
 */
export declare const uploadReference: (referenceObject: ReferenceObject) => Promise<ArweaveResponse>;
export declare function getFileFromObject(referenceObject: unknown): File;
export declare function getFormDataFromJson(referenceObject: ReferenceObject): FormData;
export {};
//# sourceMappingURL=uploads.d.ts.map