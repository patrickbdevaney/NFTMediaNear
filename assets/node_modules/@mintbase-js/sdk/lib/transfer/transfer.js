"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transfer = void 0;
const config_1 = require("../config/config");
const constants_1 = require("../constants");
const errorMessages_1 = require("../errorMessages");
const types_1 = require("../types");
/**
 * Transfers one or more tokens to specified recipients.
 * @param transferArguments {@link TransferArgs}
 * @returns contract call to be passed to @mintbase-js/sdk execute method
 */
const transfer = ({ transfers, contractAddress = config_1.mbjs.keys.contractAddress, }) => {
    if (contractAddress === null) {
        throw new Error(errorMessages_1.ERROR_MESSAGES.CONTRACT_ADDRESS);
    }
    if (exports.transfer.length == 0) {
        throw new Error(errorMessages_1.ERROR_MESSAGES.TRANSFER);
    }
    if (transfers.length > 1) {
        const ids = transfers.map((transferElm) => {
            return [transferElm.receiverId, transferElm.tokenId];
        });
        return {
            contractAddress: contractAddress || config_1.mbjs.keys.contractAddress,
            methodName: types_1.TOKEN_METHOD_NAMES.BATCH_TRANSFER,
            args: {
                token_ids: ids,
            },
            deposit: constants_1.DEPOSIT_FOR_TRANSFER,
            gas: constants_1.GAS_FOR_TRANSFER,
        };
    }
    else {
        const { receiverId, tokenId } = transfers.pop();
        return {
            contractAddress: contractAddress || config_1.mbjs.keys.contractAddress,
            methodName: types_1.TOKEN_METHOD_NAMES.TRANSFER,
            args: {
                receiver_id: receiverId,
                token_id: tokenId,
            },
            deposit: constants_1.DEPOSIT_FOR_TRANSFER,
            gas: constants_1.GAS_FOR_TRANSFER,
        };
    }
};
exports.transfer = transfer;
//# sourceMappingURL=transfer.js.map