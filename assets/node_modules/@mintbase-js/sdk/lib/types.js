"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionSuccessEnum = exports.RPC_ENDPOINTS = exports.GRAPHQL_ENDPOINTS = exports.MINTBASE_CONTRACTS = exports.MARKET_CONTRACT_ADDRESS = exports.NEAR_NETWORKS = exports.MARKET_METHOD_NAMES = exports.TOKEN_METHOD_NAMES = void 0;
var TOKEN_METHOD_NAMES;
(function (TOKEN_METHOD_NAMES) {
    TOKEN_METHOD_NAMES["TRANSFER"] = "nft_transfer";
    TOKEN_METHOD_NAMES["BATCH_TRANSFER"] = "nft_batch_transfer";
    TOKEN_METHOD_NAMES["BATCH_BURN"] = "nft_batch_burn";
    TOKEN_METHOD_NAMES["DEPLOY_TOKEN_CONTRACT"] = "create_store";
    TOKEN_METHOD_NAMES["TRANSFER_TOKEN_CONTRACT_OWNERSHIP"] = "transfer_store_ownership";
    TOKEN_METHOD_NAMES["MINT"] = "nft_batch_mint";
    TOKEN_METHOD_NAMES["ADD_MINTER"] = "grant_minter";
    TOKEN_METHOD_NAMES["REMOVE_MINTER"] = "revoke_minter";
    TOKEN_METHOD_NAMES["BATCH_CHANGE_MINTERS"] = "batch_change_minters";
    TOKEN_METHOD_NAMES["TOKEN_ACCOUNT_REVOKE"] = "nft_revoke";
    TOKEN_METHOD_NAMES["TOKEN_ACCOUNT_REVOKE_ALL"] = "nft_revoke_all";
})(TOKEN_METHOD_NAMES = exports.TOKEN_METHOD_NAMES || (exports.TOKEN_METHOD_NAMES = {}));
var MARKET_METHOD_NAMES;
(function (MARKET_METHOD_NAMES) {
    MARKET_METHOD_NAMES["LIST"] = "nft_approve";
    MARKET_METHOD_NAMES["DEPOSIT_STORAGE"] = "deposit_storage";
    MARKET_METHOD_NAMES["BUY"] = "buy";
    MARKET_METHOD_NAMES["UNLIST_OLD_MARKET"] = "delist";
    MARKET_METHOD_NAMES["UNLIST"] = "unlist";
})(MARKET_METHOD_NAMES = exports.MARKET_METHOD_NAMES || (exports.MARKET_METHOD_NAMES = {}));
var NEAR_NETWORKS;
(function (NEAR_NETWORKS) {
    NEAR_NETWORKS["MAINNET"] = "mainnet";
    NEAR_NETWORKS["TESTNET"] = "testnet";
})(NEAR_NETWORKS = exports.NEAR_NETWORKS || (exports.NEAR_NETWORKS = {}));
var MARKET_CONTRACT_ADDRESS;
(function (MARKET_CONTRACT_ADDRESS) {
    MARKET_CONTRACT_ADDRESS["mainnet"] = "simple.market.mintbase1.near";
    MARKET_CONTRACT_ADDRESS["testnet"] = "market-v2-beta.mintspace2.testnet";
})(MARKET_CONTRACT_ADDRESS = exports.MARKET_CONTRACT_ADDRESS || (exports.MARKET_CONTRACT_ADDRESS = {}));
var MINTBASE_CONTRACTS;
(function (MINTBASE_CONTRACTS) {
    MINTBASE_CONTRACTS["testnet"] = "mintspace2.testnet";
    MINTBASE_CONTRACTS["mainnet"] = "mintbase1.near";
})(MINTBASE_CONTRACTS = exports.MINTBASE_CONTRACTS || (exports.MINTBASE_CONTRACTS = {}));
var GRAPHQL_ENDPOINTS;
(function (GRAPHQL_ENDPOINTS) {
    GRAPHQL_ENDPOINTS["mainnet"] = "https://interop-mainnet.hasura.app/v1/graphql";
    GRAPHQL_ENDPOINTS["testnet"] = "https://interop-testnet.hasura.app/v1/graphql";
})(GRAPHQL_ENDPOINTS = exports.GRAPHQL_ENDPOINTS || (exports.GRAPHQL_ENDPOINTS = {}));
var RPC_ENDPOINTS;
(function (RPC_ENDPOINTS) {
    RPC_ENDPOINTS["mainnet"] = "https://rpc.mainnet.near.org";
    RPC_ENDPOINTS["testnet"] = "https://rpc.testnet.near.org";
})(RPC_ENDPOINTS = exports.RPC_ENDPOINTS || (exports.RPC_ENDPOINTS = {}));
var TransactionSuccessEnum;
(function (TransactionSuccessEnum) {
    TransactionSuccessEnum["MINT"] = "mint";
    TransactionSuccessEnum["TRANSFER"] = "transfer";
    TransactionSuccessEnum["BURN"] = "burn";
    TransactionSuccessEnum["DEPLOY_STORE"] = "deploy-store";
    TransactionSuccessEnum["MAKE_OFFER"] = "make-offer";
    TransactionSuccessEnum["REVOKE_MINTER"] = "revoke-minter";
    TransactionSuccessEnum["ADD_MINTER"] = "add-minter";
    TransactionSuccessEnum["TRANSFER_STORE_OWNERSHIP"] = "transfer-store-ownership";
    TransactionSuccessEnum["AUCTION_LIST"] = "list";
    TransactionSuccessEnum["SIMPLE_SALE_LIST"] = "simple-sale-list";
    TransactionSuccessEnum["UNLIST"] = "unlist";
    TransactionSuccessEnum["TAKE_OFFER"] = "take-offer";
    TransactionSuccessEnum["WITHDRAW_OFFER"] = "withdraw-offer";
})(TransactionSuccessEnum = exports.TransactionSuccessEnum || (exports.TransactionSuccessEnum = {}));
//# sourceMappingURL=types.js.map