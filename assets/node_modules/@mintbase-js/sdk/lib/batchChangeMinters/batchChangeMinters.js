"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.batchChangeMinters = void 0;
const config_1 = require("../config/config");
const constants_1 = require("../constants");
const errorMessages_1 = require("../errorMessages");
const types_1 = require("../types");
/**
 * Add or remove minting access of various ids of a contract you own.
 * @param batchChangeMintersArgs {@link BatchChangeMintersArgs}
 * @returns contract call to be passed to @mintbase-js/sdk execute method
 */
const batchChangeMinters = (args) => {
    const { addMinters = [], removeMinters = [], contractAddress = config_1.mbjs.keys.contractAddress } = args;
    if (contractAddress == null) {
        throw new Error(errorMessages_1.ERROR_MESSAGES.CONTRACT_ADDRESS);
    }
    if (addMinters.length === 0 && removeMinters.length === 0) {
        throw new Error('There are no minters being provided to the batchChangeMinters method to be changed, try adding account Ids to at least one of the minter fields)');
    }
    return {
        contractAddress: contractAddress,
        args: {
            grant: addMinters.length > 0 ? addMinters : undefined,
            revoke: removeMinters.length > 0 ? removeMinters : undefined,
        },
        methodName: types_1.TOKEN_METHOD_NAMES.BATCH_CHANGE_MINTERS,
        gas: constants_1.GAS,
        deposit: constants_1.ONE_YOCTO,
    };
};
exports.batchChangeMinters = batchChangeMinters;
//# sourceMappingURL=batchChangeMinters.js.map